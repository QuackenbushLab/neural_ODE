ODENet(
  (net_sums): Sequential(
    (linear_1): Linear(in_features=350, out_features=75, bias=True)
    (activation_1): SigmoidShifted()
    (linear_out): Linear(in_features=75, out_features=350, bias=True)
  )
)


    def forward(self, t, y):
        eps = 10**-3
        y = torch.relu(y) + eps
        ln_y = -0.693147 + 2*(y-0.5) - 2*(y-0.5)**2 + 2.6667*(y-0.5)**3
        sums = self.net_sums(ln_y)
        final = torch.relu(self.gene_multipliers)*(sums  - y) 
        return(final) 
